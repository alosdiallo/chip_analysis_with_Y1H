use strict;use warnings;use POSIX;use Data::Dumper;use Term::ProgressBar;use Errno;system ("dos2unix baits.txt"); system ("rm -rf seq.fa"); system ("rm -rf out.psl"); system ("rm -rf results.txt"); my $baits = $ARGV[0];sub fileCounter($){	my $baits = shift;	my $line = 0;	open (BAIT, $baits) or die $!;		my $count = 0;	while($line = <BAIT>){                		$count ++;		}		close (BAIT);	return($count);}sub bait_info($){	my $count = 0;	($count)=&fileCounter($baits);	open(SEQ,">>"."seq.fa");	my $baits = shift;	my $line = 0;	open (BAIT, $baits) or die $!;		while($line = <BAIT>){                		chomp($line); 			my @temp = split(/\t/, $line);				my $bait_name = $temp[0];				my $bait_sequence = $temp[4];				print SEQ ">$bait_name\n";				print SEQ "$bait_sequence\n";					}		close (BAIT);	close (SEQ);}()=&bait_info($baits);	sub blat($){print "please enter the version of the c elegans genome you would like to use egWS229:\t";my $wbverson = <STDIN>;chomp($wbverson); $wbverson = uc($wbverson);system ("./blat c_elegans.$wbverson.genomic.fa seq.fa out.psl"); }()=&blat();sub sort_results(){open(RESULTS, "<out.psl");open(FINALLIST,">>"."results.txt");my $line = 0;my $ticker = 0;	while($line = <RESULTS>){                		chomp($line); 			my @temp = split(/\t/, $line);		$ticker++;		my $match = $temp[0];		my $size = $temp[10];		my $name = $temp[9];		my $start = $temp[15];		my $stop =  $temp[16]; 		my $chromosome = $temp[13];		if($ticker > 5){			my $result = $match - $size;			if ($result == 0){				print FINALLIST "$name\t$chromosome\t$size\t$start\t$stop\n";			}			if ($result == -2){				print FINALLIST "$name\t$chromosome\t$size\t$start\t$stop\textera\n";			}		}	}	print "That's it your done!\n";close (RESULTS);close (FINALLIST);}()=&sort_results();